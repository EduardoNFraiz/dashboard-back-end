services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard_the_band
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app/src
    depends_on:
      - db
    env_file:
      - .env
    
  db:
    image: postgres:15
    container_name: db  
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
  redis:
    image: redis:7
    container_name: dashboard_redis
    ports:
      - "6379:6379"
    restart: always
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard_celery
    command: celery -A dashboard worker --loglevel=info -E
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app/src
    depends_on:
      - app
      - redis
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard_celery_beat
    command: sh -c "celery -A dashboard beat --loglevel=info"
    volumes:
      - .:/app
      - ./logs:/app/logs
    working_dir: /app/src
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - app
      - redis
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard_flower
    command: celery --broker=redis://redis:6379/0 -A dashboard flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    working_dir: /app/src
    depends_on:
      - redis
      - app
    env_file:
      - .env
  neo4j:
    image: neo4j:5.19
    container_name: neo4j_theband
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password123}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_initial_dbms_default_database=neo4j
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - "7474:7474"   # Interface web
      - "7687:7687"   # Bolt (acesso por outras apps)
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD:-password123} 'RETURN 1'"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  postgres_data:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  
